defmodule Test.Sparql.Generated do
  use ExUnit.Case

  @tag :generated
  test "test: SELECT 1" do

    query = "\nSELECT * WHERE { ?s ?p ?o}\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nSELECT * WHERE { ?s ?p ?o}\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "", submatches: []}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "SELECT * WHERE { ?s ?p ?o}\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT *", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "*"}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: " WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?s ?p ?o}", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?s", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?s", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?s", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbSimple, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?p", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?o", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 2" do

    query = "\nSELECT * WHERE { GRAPH ?g { ?s ?p ?o} }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nSELECT * WHERE { GRAPH ?g { ?s ?p ?o} }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "", submatches: []}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "SELECT * WHERE { GRAPH ?g { ?s ?p ?o} }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT *", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "*"}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: " WHERE { GRAPH ?g { ?s ?p ?o} }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { GRAPH ?g { ?s ?p ?o} }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " GRAPH ?g { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "GRAPH ?g { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphGraphPattern, string: "GRAPH ?g { ?s ?p ?o}", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "GRAPH"}, %InterpreterTerms.SymbolMatch{symbol: :VarOrIri, string: " ?g", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?g", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?g", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?s ?p ?o}", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?s ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?s", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?s", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?s", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " ?p ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbSimple, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?p", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?o", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?o", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "}"}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 3" do

    query = "\nSELECT ?title WHERE { <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title . }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nSELECT ?title WHERE { <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title . }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "", submatches: []}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "SELECT ?title WHERE { <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title . }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?title", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?title", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: " WHERE { <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title . }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title . }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " <http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "<http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "<http://example.org/book/book1> <http://purl.org/dc/elements/1.1/title> ?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "<http://example.org/book/book1>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "<http://example.org/book/book1>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "<http://example.org/book/book1>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "<http://example.org/book/book1>", submatches: :none}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " <http://purl.org/dc/elements/1.1/title> ?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "<http://purl.org/dc/elements/1.1/title>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "<http://purl.org/dc/elements/1.1/title>", submatches: :none}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?title", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?title", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 4" do

    query = "\nPREFIX foaf:   <http://xmlns.com/foaf/0.1/>\n  SELECT ?name ?mbox\n  WHERE\n    { ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX foaf:   <http://xmlns.com/foaf/0.1/>\n  SELECT ?name ?mbox\n  WHERE\n    { ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX foaf:   <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX foaf:   <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " foaf:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "   <http://xmlns.com/foaf/0.1/>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "\n  SELECT ?name ?mbox\n  WHERE\n    { ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?name ?mbox", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?name", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?mbox", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "\n  WHERE\n    { ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "\n    { ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:name ?name .\n      ?x foaf:mbox ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:name ?name .\n      ?x foaf:mbox ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:name ?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:name ?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:name", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?name", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "\n      ?x foaf:mbox ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:mbox ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:mbox ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:mbox", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?mbox", submatches: :none}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 5" do

    query = "\nSELECT ?v WHERE { ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype> }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nSELECT ?v WHERE { ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype> }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "", submatches: []}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "SELECT ?v WHERE { ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype> }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?v", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?v", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: " WHERE { ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype> }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype> }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?v ?p \"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?v", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " ?p \"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbSimple, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?p", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?p", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " \"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "\"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "\"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "\"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "\"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :RDFLiteral, string: "\"abc\"^^<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :String, string: "\"abc\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :STRING_LITERAL2, string: "\"abc\"", submatches: :none}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "^^"}, %InterpreterTerms.SymbolMatch{symbol: :iri, string: "<http://example.org/datatype#specialDatatype>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "<http://example.org/datatype#specialDatatype>", submatches: :none}]}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 6" do

    query = "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\n    SELECT ?nameX ?nameY ?nickY\n    WHERE\n      { ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }\n      }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\n    SELECT ?nameX ?nameY ?nickY\n    WHERE\n      { ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }\n      }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " foaf:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "    <http://xmlns.com/foaf/0.1/>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "\n    SELECT ?nameX ?nameY ?nickY\n    WHERE\n      { ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }\n      }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?nameX ?nameY ?nickY", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nameX", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nameY", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nickY", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "\n    WHERE\n      { ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }\n      }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "\n      { ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }\n      }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .\n        OPTIONAL { ?y foaf:nick ?nickY }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:knows ?y ;\n           foaf:name ?nameX .\n        ?y foaf:name ?nameY .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:knows ?y ;\n           foaf:name ?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:knows ?y ;\n           foaf:name ?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:knows", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:knows", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?y", submatches: :none}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: ";"}, %InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "\n           foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:name", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectList, string: " ?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Object, string: "?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNode, string: "?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?nameX", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nameX", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "\n        ?y foaf:name ?nameY .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?y foaf:name ?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?y", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:name ?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:name", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?nameY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nameY", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}]}]}, %InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "\n        OPTIONAL { ?y foaf:nick ?nickY }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :OptionalGraphPattern, string: "OPTIONAL { ?y foaf:nick ?nickY }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "OPTIONAL"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?y foaf:nick ?nickY }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?y foaf:nick ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?y foaf:nick ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?y foaf:nick ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?y", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?y", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:nick ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:nick", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:nick", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?nickY", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?nickY", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "\n      ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 7" do

    query = "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\nPREFIX vcard:   <http://www.w3.org/2001/vcard-rdf/3.0#>\n\nCONSTRUCT { ?x  vcard:N _:v .\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname }\nWHERE\n  {\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .\n  }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\nPREFIX vcard:   <http://www.w3.org/2001/vcard-rdf/3.0#>\n\nCONSTRUCT { ?x  vcard:N _:v .\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname }\nWHERE\n  {\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .\n  }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>\nPREFIX vcard:   <http://www.w3.org/2001/vcard-rdf/3.0#>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " foaf:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "    <http://xmlns.com/foaf/0.1/>", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "\nPREFIX vcard:   <http://www.w3.org/2001/vcard-rdf/3.0#>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " vcard:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "   <http://www.w3.org/2001/vcard-rdf/3.0#>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ConstructQuery, string: "\n\nCONSTRUCT { ?x  vcard:N _:v .\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname }\nWHERE\n  {\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .\n  }\n\n", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "CONSTRUCT"}, %InterpreterTerms.SymbolMatch{symbol: :ConstructTemplate, string: " { ?x  vcard:N _:v .\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :ConstructTriples, string: " ?x  vcard:N _:v .\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubject, string: "?x  vcard:N _:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListNotEmpty, string: "  vcard:N _:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Verb, string: "vcard:N", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrIri, string: "vcard:N", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "vcard:N", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "vcard:N", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "vcard:N", submatches: :none}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectList, string: " _:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Object, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNode, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BlankNode, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BLANK_NODE_LABEL, string: "_:v", submatches: :none}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :ConstructTriples, string: "\n            _:v vcard:givenName ?gname .\n            _:v vcard:familyName ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubject, string: "_:v vcard:givenName ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BlankNode, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BLANK_NODE_LABEL, string: "_:v", submatches: :none}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListNotEmpty, string: " vcard:givenName ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Verb, string: "vcard:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrIri, string: "vcard:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "vcard:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "vcard:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "vcard:givenName", submatches: :none}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectList, string: " ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Object, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNode, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?gname", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :ConstructTriples, string: "\n            _:v vcard:familyName ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubject, string: "_:v vcard:familyName ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BlankNode, string: "_:v", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BLANK_NODE_LABEL, string: "_:v", submatches: :none}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListNotEmpty, string: " vcard:familyName ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Verb, string: "vcard:familyName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrIri, string: "vcard:familyName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "vcard:familyName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "vcard:familyName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "vcard:familyName", submatches: :none}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectList, string: " ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Object, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNode, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?fname", submatches: :none}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "\nWHERE\n  {\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .\n  }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "\n  {\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .\n  }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: "\n    { ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname } .\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname } .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "{ ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GroupOrUnionGraphPattern, string: "{ ?x foaf:firstname ?gname } UNION  { ?x foaf:givenname   ?gname }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "{ ?x foaf:firstname ?gname }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:firstname ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:firstname ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:firstname ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:firstname ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:firstname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:firstname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?gname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "UNION"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "  { ?x foaf:givenname   ?gname }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:givenname   ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:givenname   ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:givenname   ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:givenname   ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:givenname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:givenname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "   ?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?gname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?gname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "\n    { ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GroupOrUnionGraphPattern, string: "{ ?x foaf:surname   ?fname } UNION  { ?x foaf:family_name ?fname }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "{ ?x foaf:surname   ?fname }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:surname   ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:surname   ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:surname   ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:surname   ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:surname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:surname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "   ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?fname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "UNION"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "  { ?x foaf:family_name ?fname }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:family_name ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:family_name ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:family_name ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:family_name ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:family_name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:family_name", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?fname", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?fname", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "\n  ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 8" do

    query = "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\nASK  { ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example> }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX foaf:    <http://xmlns.com/foaf/0.1/>\nASK  { ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example> }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX foaf:    <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " foaf:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "    <http://xmlns.com/foaf/0.1/>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :AskQuery, string: "\nASK  { ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example> }\n\n", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "ASK"}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "  { ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example> }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: "{ ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example> }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:name  \"Alice\" ;\n          foaf:mbox  <mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:name", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "  \"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :RDFLiteral, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :String, string: "\"Alice\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :STRING_LITERAL2, string: "\"Alice\"", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: ";"}, %InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "\n          foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:mbox", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:mbox", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectList, string: "  <mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Object, string: "<mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNode, string: "<mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "<mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "<mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "<mailto:alice@work.example>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "<mailto:alice@work.example>", submatches: :none}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 9" do

    query = "\nPREFIX a:      <http://www.w3.org/2000/10/annotation-ns#>\nPREFIX dc:     <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?annot\nWHERE { ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime ) }\n\n"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX a:      <http://www.w3.org/2000/10/annotation-ns#>\nPREFIX dc:     <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\n\nSELECT ?annot\nWHERE { ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime ) }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX a:      <http://www.w3.org/2000/10/annotation-ns#>\nPREFIX dc:     <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX a:      <http://www.w3.org/2000/10/annotation-ns#>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " a:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "      <http://www.w3.org/2000/10/annotation-ns#>", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "\nPREFIX dc:     <http://purl.org/dc/elements/1.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " dc:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "     <http://purl.org/dc/elements/1.1/>", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "\nPREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " xsd:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "    <http://www.w3.org/2001/XMLSchema#>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "\n\nSELECT ?annot\nWHERE { ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime ) }\n\n", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?annot", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?annot", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?annot", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "\nWHERE { ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime ) }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime ) }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/> .\n        ?annot  dc:date      ?date .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?annot  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?annot", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?annot", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?annot", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: "  a:annotates  <http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "a:annotates", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "a:annotates", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "  <http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphTerm, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "<http://www.w3.org/TR/rdf-sparql-query/>", submatches: :none}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "\n        ?annot  dc:date      ?date .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?annot  dc:date      ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?annot", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?annot", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?annot", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: "  dc:date      ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "dc:date", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "      ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?date", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}]}]}, %InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "\n        FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Filter, string: "FILTER ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime )", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "FILTER"}, %InterpreterTerms.SymbolMatch{symbol: :Constraint, string: " ( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BrackettedExpression, string: "( ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime )", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "("}, %InterpreterTerms.SymbolMatch{symbol: :Expression, string: " ?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ConditionalOrExpression, string: "?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ConditionalAndExpression, string: "?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ValueLogical, string: "?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :RelationalExpression, string: "?date > \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :NumericExpression, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :AdditiveExpression, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :MultiplicativeExpression, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :UnaryExpression, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrimaryExpression, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?date", submatches: :none}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: ">"}, %InterpreterTerms.SymbolMatch{symbol: :NumericExpression, string: " \"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :AdditiveExpression, string: "\"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :MultiplicativeExpression, string: "\"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :UnaryExpression, string: "\"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrimaryExpression, string: "\"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :RDFLiteral, string: "\"2005-01-01T00:00:00Z\"^^xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :String, string: "\"2005-01-01T00:00:00Z\"", submatches: [%InterpreterTerms.SymbolMatch{symbol: :STRING_LITERAL2, string: "\"2005-01-01T00:00:00Z\"", submatches: :none}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "^^"}, %InterpreterTerms.SymbolMatch{symbol: :iri, string: "xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "xsd:dateTime", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "xsd:dateTime", submatches: :none}]}]}]}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: ")"}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "\n\n", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

  @tag :generated
  test "test: SELECT 10" do

    query = "\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX dc:   <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>\nSELECT ?name\n  WHERE { ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( bound(?date) ) }"
    expected = %InterpreterTerms.SymbolMatch{symbol: :Sparql, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :QueryUnit, string: "SELECT * WHERE { ?s ?p ?o}", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Query, string: "\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX dc:   <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>\nSELECT ?name\n  WHERE { ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( BOUND(?date) ) }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Prologue, string: "PREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX dc:   <http://purl.org/dc/elements/1.1/>\nPREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "PREFIX foaf: <http://xmlns.com/foaf/0.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " foaf:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: " <http://xmlns.com/foaf/0.1/>", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "\nPREFIX dc:   <http://purl.org/dc/elements/1.1/>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " dc:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "   <http://purl.org/dc/elements/1.1/>", submatches: :none}]}, %InterpreterTerms.SymbolMatch{symbol: :PrefixDecl, string: "\nPREFIX xsd:   <http://www.w3.org/2001/XMLSchema#>", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "PREFIX"}, %InterpreterTerms.SymbolMatch{symbol: :PNAME_NS, string: " xsd:", submatches: :none}, %InterpreterTerms.SymbolMatch{symbol: :IRIREF, string: "   <http://www.w3.org/2001/XMLSchema#>", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SelectQuery, string: "\nSELECT ?name\n  WHERE { ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( BOUND(?date) ) }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :SelectClause, string: "SELECT ?name", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "SELECT"}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: " ?name", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?name", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :WhereClause, string: "\n  WHERE { ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( BOUND(?date) ) }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "WHERE"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( BOUND(?date) ) }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x foaf:givenName  ?givenName .\n          OPTIONAL { ?x dc:date ?date } .\n          FILTER ( BOUND(?date) )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x foaf:givenName  ?givenName .", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x foaf:givenName  ?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " foaf:givenName  ?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "foaf:givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "foaf:givenName", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: "  ?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?givenName", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?givenName", submatches: :none}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}]}, %InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "\n          OPTIONAL { ?x dc:date ?date }", submatches: [%InterpreterTerms.SymbolMatch{symbol: :OptionalGraphPattern, string: "OPTIONAL { ?x dc:date ?date }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "OPTIONAL"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPattern, string: " { ?x dc:date ?date }", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "{"}, %InterpreterTerms.SymbolMatch{symbol: :GroupGraphPatternSub, string: " ?x dc:date ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesBlock, string: "?x dc:date ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :TriplesSameSubjectPath, string: "?x dc:date ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?x", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?x", submatches: :none}]}]}, %InterpreterTerms.SymbolMatch{symbol: :PropertyListPathNotEmpty, string: " dc:date ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VerbPath, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Path, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathAlternative, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathSequence, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathEltOrInverse, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathElt, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PathPrimary, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :iri, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrefixedName, string: "dc:date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PNAME_LN, string: "dc:date", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.SymbolMatch{symbol: :ObjectListPath, string: " ?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ObjectPath, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :GraphNodePath, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VarOrTerm, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Var, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?date", submatches: :none}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "."}, %InterpreterTerms.SymbolMatch{symbol: :GraphPatternNotTriples, string: "\n          FILTER ( BOUND(?date) )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :Filter, string: "FILTER ( BOUND(?date) )", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "FILTER"}, %InterpreterTerms.SymbolMatch{symbol: :Constraint, string: " ( BOUND(?date) )", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BrackettedExpression, string: "( BOUND(?date) )", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "("}, %InterpreterTerms.SymbolMatch{symbol: :Expression, string: " BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ConditionalOrExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ConditionalAndExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :ValueLogical, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :RelationalExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :NumericExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :AdditiveExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :MultiplicativeExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :UnaryExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :PrimaryExpression, string: "BOUND(?date)", submatches: [%InterpreterTerms.SymbolMatch{symbol: :BuiltInCall, string: "BOUND(?date)", submatches: [%InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "BOUND"}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: "("}, %InterpreterTerms.SymbolMatch{symbol: :Var, string: "?date", submatches: [%InterpreterTerms.SymbolMatch{symbol: :VAR1, string: "?date", submatches: :none}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: "", word: ")"}]}]}]}]}]}]}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: ")"}]}]}]}]}]}, %InterpreterTerms.WordMatch{external: %{}, whitespace: " ", word: "}"}]}]}, %InterpreterTerms.SymbolMatch{symbol: :SolutionModifier, string: "", submatches: []}]}, %InterpreterTerms.SymbolMatch{symbol: :ValuesClause, string: "", submatches: []}]}]}]}
    actual = query |> TestHelper.parse

    assert TestHelper.match_ignore_whitespace_and_string(expected, actual)
  end

end
